/***************************** Solution *********************************/

class Solution {
    public int maxAreaOfIsland(int[][] grid) {
        if(grid.length == 0 || grid[0].length == 0) {
            return 0;
        }
        final int m = grid.length;
        final int n = grid[0].length;
        int maxArea = 0;  // Note: the initial value of maxArea should not be Integer.MIN. Considering the case [[0]]: initial value will be returned.
        
        for(int i = 0; i < m; i++) {
            for(int j = 0; j < n; j++) {
                if(grid[i][j] == 1) {
                    int area = area(grid, m, n, i, j);
                    maxArea = Math.max(maxArea, area);
                }
            }
        }
        return maxArea;
    }
    
    private int area(int[][] grid, final int m, final int n, final int i, final int j) {
        if(i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == 0) {
            return 0;
        }
        int ans = 1;
        grid[i][j] = 0;  // marked as read.
        ans += area(grid, m, n, i-1, j);
        ans += area(grid, m, n, i+1, j);
        ans += area(grid, m, n, i, j-1);
        ans += area(grid, m, n, i, j+1);
        return ans;
    }
}