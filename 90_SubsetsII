
/*********************** backtracking (correct) **********************/

class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> ans = new LinkedList<List<Integer>>();
        Arrays.sort(nums);
        backtrack(ans, nums, new ArrayList<Integer>(), 0);
        return ans;
    }
    
    private void backtrack(List<List<Integer>> ans, int[] nums, List<Integer> tmp, int start) {
        ans.add(new ArrayList<Integer>(tmp));
        for(int i = start; i < nums.length; i++) {
            if(i > start && nums[i] == nums[i-1]) {
                continue;
            }
            tmp.add(nums[i]);
            backtrack(ans, nums, tmp, i+1);
            tmp.remove(tmp.size()-1); 
        }
    }
}
