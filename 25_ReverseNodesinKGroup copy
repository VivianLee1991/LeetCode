/****************** reverse list & recursion!! **********************/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head == null) return null;
        
        // reverse first k nodes, get new head and tail (original head)
        int i = k;
        ListNode cur = head;
        ListNode tail = head;
        ListNode prev = null;
        while(i > 0 && cur != null) {  // reverse list
            ListNode next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
            i--;
        }
        
        if(i == 0) {  // head has no less than k nodes
            tail.next = reverseKGroup(cur, k);
            return prev;
        } else {  // less than k nodes, reverse back.
            return reverseKGroup(prev, k-i);
        }
    }
}